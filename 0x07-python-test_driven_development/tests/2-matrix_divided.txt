 Test for matrix divide
==========================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


	' Test for floats and integers '

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1.5, 2.5, 3.5],[4.5, 5.5, 6.5]], 3)
	 [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]




	' Test for division by zero '

	>>>  matrix_divided([[1.5, 2.5, 3.5],[4.5, 5.5, 6.5]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero



	' Test for non-integers and non-floats '

	>>> matrix_divided([[1, b, 3],[2u, 5, 2 + 5j]], 2)
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[a, b, c],[d, e, f]], 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats



	' Test for div as a string '

	>>>  matrix_divided([[1, 2, 3],[4, 5, 6]], str)
	Traceback (most recent call last):
        ...
        TypeError: div must be a number


	' Test for matrix of different sizes '

	>>> matrix_divided([[1, 2],[4, 5, 6]], 2)
	Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size



	' Test for matrix with negative floats and integers '

        >>> matrix_divided([[-1, -2, -3],[4, 5, 6]], 3)
        [[-0.33, -0.67, -1.0], [1.33, 1.67, 2.0]]

        >>> matrix_divided([[-1.5, -2,5, -3.5],[4, 5, 6]], 3)
         [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]



	' Test for negative div '

        >>> matrix_divided([[-1, -2, -3],[4, 5, 6]], -3)
        [[0.33, 0.67, 1.0], [-1.33, -1.67, -2.0]]



	' Test for matrix not a list of list '

	>>> matrix_divided([[-1, -2, -3]])
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
